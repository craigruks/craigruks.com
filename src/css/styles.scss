// viewport range
$min_width: 400;
$max_width: 1440;

// font-size px range
$min_font: 12;
$max_font: 20;

$color-red: rgb(255, 87, 87);

// thanks to paulirish.com/2012/box-sizing-border-box-ftw/
html {
  box-sizing: border-box;
}
*, *:before, *:after {
  box-sizing: inherit;
}

html, body {
  height: 100%;
  margin: 0;
  padding: 0;
}

body {
  color: rgba(30,0,0,0.70);
  font-family: Futura, 'Trebuchet MS', Arial, sans-serif;;
  font-size: #{$min_font}px;
  text-align: center;

  // allows .content to be vertically centered
  &:before {
    content: '';
    display: inline-block;
    height: 100%;
    vertical-align: middle;
  }
}

// Custom selection styles
::-moz-selection {
  background: $color-red;
  color: rgb(255, 255, 255);
}
::selection {
  background: $color-red;
  color: rgb(255, 255, 255);
}

section {
  display: inline-block;
  vertical-align: middle;
  text-align: left;
  width: 90%;
}

h1 {
  color: rgba(20,0,0,0.70);
  font-size: 3em;
  font-weight: 400;
  line-height: 1;
  margin: 0;
  padding: 0 0 0.4em;

  span {
    color: rgba(60, 40, 40, 0.34);
  }
}

@media (prefers-color-scheme: dark) {
  body {
    background-color: #111;
  }

  body, h1 {
    color: rgba(230,255,255,0.90);
  }
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

li {
  display: block;
  line-height: 1.4;
  margin: 0;
  padding: 0 0 0.6em 0.9em;
  position: relative;

  // trick to have different colored list item dash
  &:before {
    content: "â€“";
    color: rgba(0, 0, 0, 0.2);
    left: 0;
    top: -0.1em;
    position: absolute;
  }
}

a {
  color: $color-red;
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}


@media (min-width: #{$min_width}px) and (max-width: #{$max_width}px){
  body {
    $font_range: $max_font - $min_font;
    $width_range: $max_width - $min_width;

    // original idea from http://madebymike.com.au/writing/precise-control-responsive-typography/
    // here's how it works:
    //
    // find the remaining amount of width in terms of a percentage
    // `remaining_percent_width = remaining_width / width_range`
    //
    // then take the possible font range and multiply by that remaining percentage, gives you the amount
    // of font size to increase
    // `min_font + font_range * remaining_percent_width`
    font-size: calc( #{$min_font}px + #{$font_range} * ( (100vw - #{$min_width}px) / #{$width_range} ));
  }
}

// restrict font-size at larger resolutions
@media (min-width: #{$max_width}px){
  body {
    font-size: #{$max_font}px;
  }
}
